server:
  port: 7088

spring:
  application:
    name: test-service

#  security:
#    oauth2:
#      resourceserver:
#        jwt:
#          # 配置 RSA 的公钥访问地址
#          jwkSetUri: http://127.0.0.1:38094/rsa/publicKey

# 单独设置的
security:
  oauth2:
    resource:
      jwt:
        key-uri: http://127.0.0.1:38094/oauth/token_key
#    client:
#      clientId: resource1
#      clientSecret: secret
#      userAuthorizationUri: http://localhost:38094/oauth/authorize
#      grant-type: password
#      scope: read
#      access-token-uri: http://localhost:38094/oauth/token
#    authorization:
#      check-token-access: http://localhost:38094/oauth/check_token

# 下面是这常用的配置项目的作用
## SECURITY OAUTH2 CLIENT (OAuth2ClientProperties)
#  security.oauth2.client.client-id= # OAuth2 client id.
#  security.oauth2.client.client-secret= # OAuth2 client secret. A random secret is generated by default
#
#  # SECURITY OAUTH2 RESOURCES (ResourceServerProperties)
#  security.oauth2.resource.id= # 资源的标识符。
#  security.oauth2.resource.jwt.key-uri= # JWT令牌的 URI。如果该值不可用且密钥为 public，则可以设置。
#  security.oauth2.resource.jwt.key-value= # JWT令牌的验证密钥,可以是对称秘密或 pem 编码的 RSA公钥。
#  security.oauth2.resource.jwk.key-set-uri= # 用于获取可用于验证令牌的密钥集的URI。
#  security.oauth2.resource.prefer-token-info=true # 使用令牌信息，可以设置为 false 使用用户信息。
#  security.oauth2.resource.service-id=resource #
#  security.oauth2.resource.token-info-uri= # 令牌解码端点的 uri 一般对应
#  security.oauth2.resource.token-type= # 使用 userInfoUri 时要发送的令牌类型。
#  security.oauth2.resource.user-info-uri= # 用户端点的 URI。
#
#  # SECURITY OAUTH2 SSO (OAuth2SsoProperties)
#  security.oauth2.sso.login-path=/login # Path to the login page, i.e. the one that triggers the redirect to the OAuth2 Authorization Server

# 这个使用 value 的方式使用公钥如下所示：
# 参考资料 https://docs.spring.io/spring-security-oauth2-boot/docs/2.0.0.RC2/reference/htmlsingle/
#security:
#  oauth2:
#    resource:
#      jwt:
#        keyValue: |
#          -----BEGIN PUBLIC KEY-----
#          MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKC...
#          -----END PUBLIC KEY-----

management:
  endpoints:
    web:
      exposure:
        include: "*"

eureka:
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone: http://localhost:8000/eureka #单机版



logging:
  level:
    com.alsritter: info